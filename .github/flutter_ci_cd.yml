name: hello_world_app CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.x'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Analyze code
      run: flutter analyze
    
    - name: Run tests
      run: flutter test
    
    - name: Build Web
      run: flutter build web
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: flutter-hello-world:v1
        outputs: type=docker,dest=/tmp/flutter-hello-world.tar
    
    - name: Set up Minikube
      uses: medyagh/setup-minikube@master
    
    - name: Load image to Minikube
      run: |
        minikube image load /tmp/flutter-hello-world.tar
    
    - name: Deploy to Minikube
      run: |
        kubectl apply -f flutter-app-deployment.yaml
        kubectl set image deployment/flutter-hello-world flutter-hello-world=flutter-hello-world:v1
    
    - name: Verify deployment
      run: |
        kubectl get deployments
        kubectl get services
        minikube service list

    # Optional: You can add a step to run tests against the deployed service
    # - name: Test deployed service
    #   run: |
    #     minikube service flutter-hello-world-service --url
    #     # Add commands to test the deployed service

  # You can add more jobs here in the future if needed
